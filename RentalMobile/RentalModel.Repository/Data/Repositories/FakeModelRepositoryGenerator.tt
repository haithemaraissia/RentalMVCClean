<#@ template debug="true"  hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace=" System.IO" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="EnvDTE" #>
<#@ include file="$(ProjectDir)\Tools\Base\MultipleOutputHelper.ttinclude.tt"#>
<#@ include file="$(ProjectDir)\Tools\Base\ModelHelper.tt"#>
<#@ output extension=".txt" #>

<#    
    var manager = Manager.Create(Host, GenerationEnvironment); 

    foreach ( var FileName in  GetAllFilesFromModelPath(CurrentModelDirectoryFromSolution()))
    { 
        manager.StartNewFile("Fake" + FileName + "Repository.cs");#>
using System.Collections.Generic;
using RentalMobile.Model.Models;
using RentalModel.Repository.Data.Fake;
using RentalModel.Repository.Generic.Repositories.Base;

namespace RentalModel.Repository.Data.Repositories
{
    public class Fake<#=FileName#>Repository : FakeGenericRepository<<#=FileName#>>
    {
        public Fake<#=FileName#>Repository() : base(new Fake<#=FileName#>s().My<#=FileName#>s)
        {
        }
        public Fake<#=FileName#>Repository(List<<#=FileName#>> my<#=FileName#>): base(my<#=FileName#>)
        {
        }

    }
}
       <#
    }   
    
 manager.Process(true, true); #>


