@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/Template/_ConceptLayoutPage.cshtml";
}
<head>
    <title>plUpload Image Upload Sample</title>
    <link href="../../css/pupload/Css/Standard.css" rel="stylesheet" type="text/css" />
    <link href="../../Scripts/plupload/jquery.plupload.queue/css/jquery.plupload.queue.css"
        rel="stylesheet" type="text/css" />
    <style>
        #ImageContainer img
        {
            margin: 10px;
            vertical-align: top;
            height: 165px;
            border-radius: 5px;
            -webkit-box-shadow: 2px 2px 4px #535353;
            box-shadow: 2px 2px 4px #535353;
        }
        #Uploader_filelist
        {
            height: 140px;
        }
        #ImagePreview
        {
            padding: 20px;
            background: white;
            position: absolute;
            border-radius: 8px;
        }
        #ImagePreview img
        {
        }
    </style>
</head>
<h1>
    plUpload Image Upload Demo</h1>
<div class="toolbarcontainer">
    <a href="/Upload" class="hoverbutton"><span class="icon-refresh"></span>Refresh</a>
</div>
<div class="descriptionheader">
Description
</div>
<div class="containercontent">
    <div id="ImageContainer">
    </div>
    <div id="Uploader">
    </div>
    <div id="ImagePreview" style="display: none">
        <img id="ImageView" />
    </div>
</div>
<script src="http://code.jquery.com/jquery-latest.min.js"></script>
<script src="../../Scripts/plupload/plupload.full.js"></script>
<script src="../../Scripts/plupload/jquery.plupload.queue/jquery.plupload.queue.js"></script>
<!-- just for this demo: draggable, closable, modalDialog -->
<script src="../../Scripts/plupload/ww.jquery.min.js"></script>
<!-- page specific JavaScript that puts up plUpload component -->
        <script>
            $(document).ready(function () { // initialize status bar
                showStatus({ autoClose: true });
                var t = window.location.hostname + '/handler/ImageUploadHandler.ashx';
                var x = window.location.hostname+ '/scripts/plupload/plupload.flash.swf';
                var y = window.location.hostname + '/scripts/plupload/plupload.silverlight.xap';

                var model = @Html.Raw(Json.Encode(Model));
                var d = '@ViewBag.TenantUserName';
                alert(d);

                alert(t);
                alert("X");
                alert(model);
                alert(y);

            });

        </script>
        <script>
            $(document).ready(function () { // initialize status bar
                showStatus({ autoClose: true });
                var t = window.location.hostname + '/handler/ImageUploadHandler.ashx';
                var x = window.location.hostname + '/scripts/plupload/plupload.flash.swf';
                var y = window.location.hostname + '/scripts/plupload/plupload.silverlight.xap';
                $("#Uploader").pluploadQueue({
                    runtimes: 'html5,silverlight,flash,html4',
                    url: '../Handler/ImageUploadHandler.ashx',
                    max_file_size: '2mb',
                    chunk_size: '64kb',
                    unique_names: false,
                    // Resize images on clientside if we can
                    resize: { width: 800, height: 600, quality: 90 },
                    // Specify what files to browse for
                    filters: [{ title: "Image files", extensions: "jpg,jpeg,gif,png"}],
                    flash_swf_url: '../../scripts/plupload/plupload.flash.swf',
                    silverlight_xap_url: '../../scripts/plupload/plupload.silverlight.xap',
                    multiple_queues: true,
                    multipart_params: { UserName: '@ViewBag.UserName', id: '@ViewBag.Id', type: '@ViewBag.Type' }
                });


                // get uploader instance
                var uploader = $("#Uploader").pluploadQueue();


                $("#btnStopUpload").click(function () {
                    uploader.stop();
                });
                $("#btnStartUpload").click(function () {
                    uploader.start();
                });

                // bind uploaded event and display the image
                // response.response returns the last response from server
                // which is the URL to the image that was sent by OnUploadCompleted
                uploader.bind("FileUploaded", function (upload, file, response) {
                    // remove the file from the list
                    upload.removeFile(file);

                    // Response.response returns server output from onUploadCompleted
                    // our code returns the url to the image so we can display it
                    var imageUrl = response.response;

                    $("<img>").attr({ src: imageUrl })
                        .click(function () {
                            $("#ImageView").attr("src", imageUrl);
                            setTimeout(function () {
                                var ip = $("#ImagePreview");

                                // show as overlay
                                ip.fadeIn("slow")
                                    .modalDialog()
                                    .closable()
                                    .draggable();

                                // close the modal by clicking on the overlay
                                $("#_ModalOverlay").click(function () {
                                    $("#ImagePreview").modalDialog("hide");
                                });
                            }, 200);
                        })
                        .appendTo($("#ImageContainer"));
                });

                // Error handler displays client side errors and transfer errors
                // when you click on the error icons
                uploader.bind("Error", function (upload, error) {
                    showStatus(error.message, 3000, true);
                });

                // only allow 5 files to be uploaded at once
                uploader.bind("FilesAdded", function (up, filesToBeAdded) {
                    if (up.files.length > 20) {
                        up.files.splice(19, up.files.length - 20);
                        showStatus("Only 20 files max are allowed per upload. Extra files removed.", 3000, true);
                        return false;
                    }
                    return true;
                });

                //The plUpload labels are not customizable explicitly
                //so if you want to do this you have to directly manipulate the DOM
                setTimeout(function () {
                    $(".plupload_header_title").text("Upload Images")
                    $(".plupload_header_text").html("Add images to upload and click start. Images are resized to 600 pixels height and can't be larger than 1 meg.")
                }, 200);

            });

        </script>
<!-- UPLOADER !-->




@ViewBag.TenantUserName

@using (Html.BeginForm("Create", "Upload", FormMethod.Post))
{
    <p>
        <input type="submit" value="Publish" />
        <label runat="server" title="@ViewBag.RequestID"></label>
        <input type="hidden" id="PackageID" value=" @ViewBag.RequestID">
   </p>
}