@model RentalMobile.Model.ModelViews.ProviderMaintenanceProfile
@using RentalMobile.Helpers
@{
    ViewBag.Title = "Complete Profile";
    Layout = "~/Views/Shared/Template/_ConceptLayoutPage.cshtml";
}
<h2>
    Complete Profile</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="../../css/smartwizard/smart_wizard.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../Scripts/jquery-1.6.4.min.js"></script>
<script type="text/javascript" src="../../Scripts/smartwizard/jquery.smartWizard-2.0.js"></script>
<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css"
    rel="stylesheet" type="text/css" />
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
@using (Html.BeginForm())
{
 @Html.ValidationSummary(true)
    <style>
        form li small
        {
            top: 0;
        }
        ul li
        {
            text-align: center;
        }
        .zip-error
        {
            color: #d70000;
            font: 12px "Lucida Sans Unicode" , "Lucida Grande" , sans-serif;
            border-top: 2px dotted #ec9696;
            border-bottom: 2px dotted #ec9696;
            text-align: center;
            padding: 5px 10px;
            margin-top: 10px;
            display: none;
        }
        #Description
        {
            height: 150px;
            min-height: 150px;
        }
    </style>
    <div id="wizard" class="swMain sixteen columns shadded wide-on-small-screen">
        <ul class="sixteen columns">
            <li><a href="#step-1" class="four columns"><span class="stepNumber">1</span> <span
                class="stepDesc">About<br />
            </span></a></li>
            <li><a href="#step-2" class="four columns"><span class="stepNumber">2</span> <span
                class="stepDesc">Media<br />
            </span></a></li>
        </ul>
        <div id="step-1" class="sixteen columns" style="height: auto; padding: 0">
            <h2 class="StepTitle">
                About</h2>
            <section class="sixteen columns add-bottom relative" style="margin-top: 10px; margin-left: 5%">
                <ul>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.Name, new { id = "maintenancecompanyname", required = "required", @class = "full-width", placeholder = "Company Name", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.Website, new { id = "website", required = "required", @class = "full-width", placeholder = "Website", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.EmailAddress, new { id = "emailaddress", required = "required", @class = "full-width", placeholder = "Email Address", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.VCard, new { id = "vcard", required = "required", @class = "full-width", placeholder = "VCard", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.Skype, new { id = "skype", required = "required", @class = "full-width", placeholder = "Skype", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.Twitter, new { id = "twitter", required = "required", @class = "full-width", placeholder = "Twitter", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.LinkedIn, new { id = "linkedin", required = "required", @class = "full-width", placeholder = "LinkedIn", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.GooglePlus, new { id = "googleplus", required = "required", @class = "full-width", placeholder = "Google Plus", style = "margin: 0 auto" })
                    </li>
                </ul>
            </section>
            <section class="sixteen columns add-bottom relative" style="margin-top: -10px; margin-left: 5%">
                <ul>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.Address, new { id = "address", required = "required", @class = "full-width", placeholder = "Address", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.Zip, new { id = "zip", required = "required", @class = "full-width", placeholder = "Zip", pattern = @"[0-9]*", style = "margin: 0 auto" })
                        <div class="zip-error">
                            Not a real zip code.</div>
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.City, new { id = "city", required = "required", @class = "full-width", placeholder = "City", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.Region, new { id = "state", required = "required", @class = "full-width", placeholder = "Region", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">@Html.TextBoxFor(m => m.MaintenanceCompany.Country, new { id = "country", required = "required", @class = "full-width", placeholder = "Country", style = "margin: 0 auto" })
                    </li>
                    <li class="ten columns">@Html.TextAreaFor(m => m.MaintenanceCompany.Description, new { row = "20", required = "required", placeholder = "Description", style = "margin: 0 auto; width:88%" })
                    </li>
                </ul>
            </section>
            <section>
                <ul>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">
                        <label id="NumberofYearsofExperienceLabel">
                            Years of Experience</label>
                        @Html.TextBoxFor(m => m.MaintenanceCompanySpecialization.Years_Experience, new { id = "numberofyearsofexperience", required = "required", @class = "number-width center center", placeholder = "1", @pattern = @"\d+", step = "1", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">
                        <label id="NumberofEmployeeLabel">
                            Number of Employee</label>
                        @Html.TextBoxFor(m => m.MaintenanceCompanySpecialization.NumberofEmployee, new { id = "numberofemployee", required = "required", @class = "number-width center center", placeholder = "1", @pattern = @"\d+", step = "1", style = "margin: 0 auto" })
                    </li>
                    <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">
                        <label id="NumberofCertifitedEmplyeeLabel">
                            Number of Certified Employee</label>
                        @Html.TextBoxFor(m => m.MaintenanceCompanySpecialization.NumberofCertifitedEmplyee, new { id = "NumberofCertifitedEmployee", required = "required", @class = "number-width center", placeholder = "1", @pattern = @"\d+", step = "1", style = "margin: 0 auto" })
                    </li>
                     <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">
                        <label id="RateLabel">
                            Rate</label>
                        @Html.TextBoxFor(m => m.MaintenanceCompanySpecialization.Rate, new { id = "Rate", type = "number", required = "required", @class = "number-ExtraWidth center", placeholder = "0.00", @pattern = @"^\d+(\.|\,)\d{2}$" })
                    </li>
                      <li class="five columns" style="margin-bottom: 15px; margin-top: 15px;">
                        <label id="CurrencyLabel">
                            Currency</label>
                        @Html.DropDownListFor(m => m.MaintenanceCompanySpecialization.CurrencyID, Html.Currency((int?)ViewBag.CurrencyCode))
                    </li>
                </ul>
            </section>
        </div>
        <div id="step-2" class="sixteen columns" style="height: auto; padding: 0">
            <h2 class="StepTitle">
                Video</h2>
            <section class="sixteen columns relative" style="margin-top: 30px; margin-left: 10px;
                margin-bottom: 10px; text-align: center">
                <ul>
                    <li class="seven columns">
                        <img style="width: 250px; height: 250px" class="scale-with-grid" alt="agent" src="../../images/YouTubeLogo.jpg" />
                        <br />
                        @Html.CheckBoxFor(m => m.MaintenanceProvider.YouTubeVideo, new { id = "YouTubeVideoCheckBox" })
                        <br />
                        <div align="center">
                            @Html.TextBoxFor(m => m.MaintenanceProvider.YouTubeVideoURL, new { id = "YouTubeVideoURL", @class = "full-width", placeholder = "You Tube Video URL" })
                        </div>
                    </li>
                    <li class="seven columns">
                        <img style="width: 250px; height: 250px" class="scale-with-grid" alt="agent" src="../../images/Vimeo_logo.png" />
                        <br />@Html.CheckBoxFor(m => m.MaintenanceProvider.VimeoVideo, new { id = "VimeoVideoBox" })
                        <br />
                        <div align="center">
                            @Html.TextBoxFor(m => m.MaintenanceProvider.VimeoVideoURL, new { id = "VimeoVideoURL", @class = "full-width", placeholder = "Vimeo Video URL" })
                        </div>
                    </li>
                </ul>
            </section>
        </div>
        @Html.HiddenFor(m => m.MaintenanceCompanyLookUp.CompanyId) @Html.HiddenFor(m => m.MaintenanceCompanyLookUp.UserId)
        @Html.HiddenFor(m => m.MaintenanceCompanyLookUp.Role) @Html.HiddenFor(m => m.MaintenanceCompany.CompanyId)
        @Html.HiddenFor(m => m.MaintenanceCompanySpecialization.CompanyId) @Html.HiddenFor(m => m.MaintenanceCustomService.CompanyId)
        @Html.HiddenFor(m => m.MaintenanceExterior.CompanyId) @Html.HiddenFor(m => m.MaintenanceInterior.CompanyId)
        @Html.HiddenFor(m => m.MaintenanceNewConstruction.CompanyId) @Html.HiddenFor(m => m.MaintenanceRepair.CompanyId)
        @Html.HiddenFor(m => m.MaintenanceUtility.CompanyId)
    </div>
}
<div>
    @Html.ActionLink("Back to Profile", "Index")
</div>
<table class="model-state">
    @foreach (var item in ViewContext.ViewData.ModelState)
    {
        if (item.Value.Errors.Any())
        { 
        <tr>
            <td>
                <b>@item.Key</b>
            </td>
            <td>@((item.Value == null || item.Value.Value == null) ? "<null>" : item.Value.Value.RawValue)
            </td>
            <td>@(string.Join("; ", item.Value.Errors.Select(x => x.ErrorMessage)))
            </td>
        </tr>
        }
    }
</table>
<style>
    table.model-state
    {
        border-color: #600;
        border-width: 0 0 1px 1px;
        border-style: solid;
        border-collapse: collapse;
        font-size: .8em;
        font-family: arial;
    }
    table.model-state td
    {
        border-color: #600;
        border-width: 1px 1px 0 0;
        border-style: solid;
        margin: 0;
        padding: .25em .75em;
        background-color: #FFC;
    }
</style>
@section scripts{
    @* ReSharper disable UnusedLocals *@
    <script type="text/javascript">
        $(document).ready(function () {
            $('#wizard').smartWizard({ transitionEffect: 'slideleft', onLeaveStep: leaveAStepCallback, onFinish: onFinishCallback, enableFinishButton: true });

            function leaveAStepCallback(obj) {
                var stepNum = obj.attr('rel');
                return validateSteps(stepNum);
            }

            function onFinishCallback() {
                if (validateAllSteps()) {
                    $('form').submit();
                }
            }
        });

        function validateAllSteps() {
            var isStepValid = true;

            if (validateStep1() == false) {
                isStepValid = false;
                $('#wizard').smartWizard('setError', { stepnum: 1, iserror: true });
            } else {
                $('#wizard').smartWizard('setError', { stepnum: 1, iserror: false });
            }


            if (!isStepValid) {
                $('#wizard').smartWizard('showMessage', 'Please correct the errors in the steps and continue');
            }

            return isStepValid;
        }


        function validateSteps(step) {
            var isStepValid = true;
            // validate step 1
            if (step == 1) {
                if (validateStep1() == false) {
                    isStepValid = false;
                    $('#wizard').smartWizard('showMessage', 'Please correct the errors in step' + step + ' and click next.');
                    $('#wizard').smartWizard('setError', { stepnum: step, iserror: true });
                } else {
                    $('#wizard').smartWizard('setError', { stepnum: step, iserror: false });
                }
            }
            return isStepValid;
        }

        function validateStep1() {
            var isValid = true;
            //return isValid;
            return true;
        }

        function validateStep3() {
            var isValid = true;
            //validate email  email
            var email = $('#email').val();
            if (email && email.length > 0) {
                if (!isValidEmailAddress(email)) {
                    isValid = false;
                    $('#msg_email').html('Email is invalid').show();
                } else {
                    $('#msg_email').html('').hide();
                }
            } else {
                isValid = false;
                $('#msg_email').html('Please enter email').show();
            }
            return isValid;
        }

        // Email Validation
        function isValidEmailAddress(emailAddress) {
            var pattern = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
            return pattern.test(emailAddress);
        } 

</script>
    @* ReSharper restore UnusedLocals *@
    <script>

        function EnterKeyFilter() {
            if (window.event.keyCode == 13) {
                event.returnValue = false;
                event.cancel = true;
            }
        }

        function is_int(value) {
            if ((parseFloat(value) == parseInt(value)) && !isNaN(value)) {
                return true;
            } else {
                return false;
            }
        }

        $(function () {
            var firstReveal = true;

            $("#zip").keyup(function () {
                var el = $(this);
                if ((el.val().length == 5) && (is_int(el.val()))) {
                    $.ajax({
                        url: "http://zip.elevenbasetwo.com/v2/US/" + el.val(),
                        cache: false,
                        dataType: "json",
                        type: "GET",
                        // data: el.val(),
                        //                        data: "zip=" + el.val(),
                        success: function (result) {
                            $(".zip-error, .instructions").slideUp(200);
                            $("#city").val(result.city);
                            $("#state").val(result.state);
                            $("#country").val(result.country);
                            if (firstReveal) {
                                // Ghetto but without this timeout the field doesn't
                                // take focus for some reason.
                                setTimeout(function () { $("#address-line-1").focus(); },
                                400);
                            };
                            firstReveal = false;
                        },
                        error: function () {

                            $(".zip-error").slideDown(300);
                        }
                    });

                } else if (el.val().length < 5) {
                    $(".zip-error").slideUp(200);
                };
            });
        });
        
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('#YouTubeVideoCheckBox').change(function () {
                if ($(this).is(':checked')) {
                    $('#VimeoVideoBox').prop('checked', false);
                    $('#VimeoVideoURL').val("");
                }
            });

            $('#VimeoVideoBox').change(function () {
                if ($(this).is(':checked')) {
                    $('#YouTubeVideoCheckBox').prop('checked', false);
                    $('#YouTubeVideoURL').val("");
                }
            });
        });
    </script>
}
