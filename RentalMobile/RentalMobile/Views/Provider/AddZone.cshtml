@model RentalMobile.Models.MaintenanceProviderZone
@{
    ViewBag.Title = "Add Zone";
    Layout = "~/Views/Shared/Template/_ConceptLayoutPage.cshtml";

    if (ViewBag.ConfirmationSuccess != null && ViewBag.Confirmation == true)
    {
        ViewBag.Confirmation = false;
    <link rel="stylesheet" type="text/css" href="../../Scripts/jNotify-master/jquery/jNotify.jquery.css"
        media="screen" />
    <script type="text/javascript" src="../../Scripts/jNotify-master/jquery/jNotify.jquery.js"></script>
    <script language='javascript' type='text/javascript'>
            @Html.Raw(ViewBag.ConfirmationSuccess)
    </script>
    }

    <script>

        function EnterKeyFilter() {
            if (window.event.keyCode == 13) {
                event.returnValue = false;
                event.cancel = true;
            }
        }

        function is_int(value) {
            if ((parseFloat(value) == parseInt(value)) && !isNaN(value)) {
                return true;
            } else {
                return false;
            }
        }

        $(function () {

            // Set up
            $(".fancy-form div > div").hide();
            var firstReveal = true;

            $("#zip").keyup(function () {

                // Cache 
                var el = $(this);

                // Did they type five integers?
                if ((el.val().length == 5) && (is_int(el.val()))) {

                    // Call Ziptastic for information
                    $.ajax({
                        url: "http://zip.elevenbasetwo.com",
                        cache: false,
                        dataType: "json",
                        type: "GET",
                        data: "zip=" + el.val(),
                        success: function (result) {

                            $(".zip-error, .instructions").slideUp(200);

                            $("#city").val(result.city);

                            $("#state").val(result.state);

                            $("#country").val(result.country);

                            $(".fancy-form div > div").slideDown();

                            if (firstReveal) {
                                // Ghetto but without this timeout the field doesn't
                                // take focus for some reason.
                                setTimeout(function () { $("#address-line-1").focus(); },
                                    400);
                            }
                            ;

                            firstReveal = false;

                        },
                        error: function () {

                            $(".zip-error").slideDown(300);

                        }
                    });

                } else if (el.val().length < 5) {

                    $(".zip-error").slideUp(200);

                }
                ;

            });

        });
        // END DOM Ready

</script>
}
<style>
    .fancy-form
    {
        background: #f7f7f7;
        border-radius: 6px;
        padding: 20px;
        box-shadow: 0 1px 3px 0 #000000, inset 0 0 0 1px #ffffff;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(255, 255, 255, 1);
        border: 1px solid #B2B2B2;
    }
    
    .fancy-form input
    {
        -webkit-transition: all 0.3s ease-out;
        -moz-transition: all 0.3s ease-out;
        -o-transition: all 0.3s ease-out;
        transition: all 0.3s ease-out;
    }
    .fancy-form input[type="text"]
    {
        outline: none;
        border: 1px solid #cccccc;
        box-shadow: 0 0 0 4px #000000, inset 0 1px 0 0 #ffffff, inset 0 1px 6px 0 #000000;
        box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.1), inset 0 1px 0 0 rgba(255, 255, 255, 1), inset 0 1px 6px 0 rgba(0, 0, 0, 0.05);
        border-radius: 3px;
        padding: 7px 10px;
        background: #f1f1f1;
        color: #b5b5b5;
        margin-bottom: 4px;
    }
    
    .fancy-form input[type="text"]:hover
    {
        background: #f7f7f7;
    }
    .fancy-form input[type="text"]:focus
    {
        box-shadow: 0 0 0 5px #000000, 0 1px 5px 0 #000000, inset 0 1px 6px 0 #000000;
        box-shadow: 0 0 0 5px rgba(0, 0, 0, 0.1), 0 1px 5px 0 rgba(0, 0, 0, 0.2), inset 0 1px 6px 0 rgba(0, 0, 0, 0.1);
        background: #fff;
        border-color: transparent;
        color: #565656;
    }
    
    .fancy-form fieldset
    {
        border: none;
        padding: 25px 10px 10px 10px;
    }
    .fancy-form legend
    {
        font: 26px "Lucida Sans Unicode" , "Lucida Grande" , sans-serif;
        text-transform: uppercase;
        text-shadow: 0 1px 1px #fff;
        color: #1b6d8e;
        padding: 0 5px;
    }
    .fancy-form label
    {
        display: block;
        font: 14px Arial, Helvetica, sans-serif;
        padding-left: 10px;
        letter-spacing: 1px;
        padding-left: 10px;
        color: #1b6d8e;
        opacity: 0.8;
    }
    .fancy-form input:focus + label
    {
        opacity: 1.0;
    }
    .fancy-form input:not([type=submit])
    {
        width: 100%;
        display: block;
    }
    .submit-wrap
    {
        display: none;
    }
    .fancy-form input[type="submit"]
    {
        padding: 10px 40px;
        border: 1px solid #a9d9fa;
        background-image: linear-gradient(rgb(52, 105, 147) 0, rgb(32, 86, 132) 100%);
        border: 1px solid #5cb0d2;
        box-shadow: 0 0 0 4px #d2d2d2, inset 0 1px 1px 0 #ffffff, inset 0 1px 20px 0 #ffffff, inset 0 -1px 0 0 #000000;
        box-shadow: 0 0 0 4px rgba(210, 210, 210, 1), inset 0 1px 1px 0 rgba(255, 255, 255, 0.6), inset 0 1px 20px 0 rgba(255, 255, 255, 0.2), inset 0 -1px 0 0 rgba(0, 0, 0, 0.4);
        font: bold 16px Arial, Helvetica, sans-serif;
        border-radius: 40px;
        color: white;
        text-shadow: 0 1px 0 #ffffff;
        text-shadow: 0 1px 0 rgba(255,255,255,0.5);
        cursor: pointer;
        outline: none;
    }
    
    .fancy-form input[type="submit"]:hover
    {
        background-color: #88daf6;
        color: #1b6d8e;
    }
    .fancy-form input[type="submit"]:active
    {
        background-color: #69c4e7;
        box-shadow: 0 0 0 4px #000000, inset 0 -1px 1px 0 #ffffff, inset 0 5px 20px 0 #000000, inset 0 1px 0 0 #000000;
        box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.1), inset 0 -1px 1px 0 rgba(255, 255, 255, 0.6), inset 0 5px 20px 0 rgba(0, 0, 0, 0.1), inset 0 1px 0 0 rgba(0, 0, 0, 0.2);
        color: #2190bd;
        -webkit-transition: all 0.1s ease-out;
        -moz-transition: all 0.1s ease-out;
        -o-transition: all 0.3s ease-out;
        -ms-transition: all 0.1s ease-out;
    }
    
    .fancy-form div
    {
        margin: 0 0 6px 0;
        clear: both;
    }
    .fancy-form div > div
    {
        padding: 4px;
    }
    .fancy-form .city-wrap
    {
        width: 69%;
        margin-right: 1%;
    }
    .fancy-form .state-wrap
    {
        width: 9%;
        margin-right: 1%;
    }
    .fancy-form .zip-wrap
    {
        width: 20%;
        display: block !important;
    }
    .zip-error
    {
        color: #d70000;
        font: 12px "Lucida Sans Unicode" , "Lucida Grande" , sans-serif;
        border-top: 2px dotted #ec9696;
        border-bottom: 2px dotted #ec9696;
        text-align: center;
        padding: 5px 10px;
        margin-top: 10px;
        display: none;
    }
    #Description
    {
        height: 150px;
        min-height: 150px;
    }
</style>
<section class="sixteen columns add-bottom relative">
    @using (Html.BeginForm("AddZone", "Provider", FormMethod.Post, new { @class = "fancy-form", onkeydown = "EnterKeyFilter();" }))
    {
        @Html.ValidationSummary(false)
        <fieldset>
            <legend>Add Zone</legend>
            <div>
                <label for="city">
                    Zipcode</label>
            </div>
            <div>
                <div class="editor-label">
                    <label for="city">
                        City</label>
                </div>
                <div class="editor-label">
                    @Html.TextBoxFor(model => model.CityName, new { id = "city", name = "city" })
                </div>
                <div class="editor-label">
                    <label for="state">
                        State</label>
                </div>
                <div class="editor-label">
                    <input id="state" name="state" type="text" />
                </div>
                <div class="zip-wrap">
                    <div class="editor-label">
                        <label for="zip">
                            Zip</label></div>
                    @Html.TextBoxFor(model => model.ZipCode, new { id = "zip", name = "zip", maxlength = "5", required = "required", pattern = @"[0-9]*" })
                    <p class="zip-error">
                        Not a real zip code.</p>
                </div>
            </div>
            <p>
                <input type="submit" value="Add" />
            </p>
            <div>
            </div>
        </fieldset>
    }
    <div>
        <a class="button" href="../../Provider#coverage">Back</a>
    </div>
</section>
